{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, addproductReducer, getproductByIdReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  addproductReducer: addproductReducer,\n  getproductByIdReducer: getproductByIdReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/sem 6/LAB WORK/SDP2/veggies/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","addproductReducer","getproductByIdReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","shippingAddressFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","cartItemsFromStorage","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,iBAHF,EAIEC,qBAJF,QAKO,2BALP;AAMA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,QAKO,yBALP;AAOA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,0BALP;AAOA,MAAMC,0BAA0B,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,oBAAoB,GAAGL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMK,OAAO,GAAGxB,eAAe,CAAC;AAC9ByB,EAAAA,WAAW,EAAErB,kBADiB;AAE9BsB,EAAAA,cAAc,EAAErB,qBAFc;AAG9BsB,EAAAA,IAAI,EAAEnB,WAHwB;AAI9BoB,EAAAA,SAAS,EAAEnB,gBAJmB;AAK9BoB,EAAAA,YAAY,EAAEnB,mBALgB;AAM9BoB,EAAAA,WAAW,EAAEnB,kBANiB;AAO9BoB,EAAAA,iBAAiB,EAAEnB,wBAPW;AAQ9BoB,EAAAA,WAAW,EAAEnB,kBARiB;AAS9BoB,EAAAA,YAAY,EAAEnB,mBATgB;AAU9BoB,EAAAA,QAAQ,EAAElB,eAVoB;AAW9BmB,EAAAA,WAAW,EAAEpB,kBAXiB;AAY9BT,EAAAA,iBAAiB,EAAEA,iBAZW;AAa9BC,EAAAA,qBAAqB,EAAEA;AAbO,CAAD,CAA/B;AAeA,MAAM6B,YAAY,GAAG;AACnBT,EAAAA,IAAI,EAAE;AACJU,IAAAA,SAAS,EAAEd,oBADP;AAEJe,IAAAA,eAAe,EAAErB;AAFb,GADa;AAKnBW,EAAAA,SAAS,EAAE;AAAEW,IAAAA,QAAQ,EAAEjB;AAAZ;AALQ,CAArB;AAOA,MAAMkB,UAAU,GAAG,CAACtC,KAAD,CAAnB;AACA,MAAMuC,KAAK,GAAG1C,WAAW,CACvByB,OADuB,EAEvBY,YAFuB,EAGvBjC,mBAAmB,CAACF,eAAe,CAAC,GAAGuC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  addproductReducer,\r\n  getproductByIdReducer,\r\n} from \"./reducers/productReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderPayReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  addproductReducer: addproductReducer,\r\n  getproductByIdReducer: getproductByIdReducer,\r\n});\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}