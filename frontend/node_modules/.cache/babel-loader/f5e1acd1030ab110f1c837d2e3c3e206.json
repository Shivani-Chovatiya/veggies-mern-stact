{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_DETAILS_RESET, USER_ALL_DETAILS_FAIL, USER_ALL_DETAILS_REQUEST, USER_ALL_DETAILS_SUCCESS } from \"../constants/userConstants\";\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:8080/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:8080/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8080/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"http://localhost:8080/api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getallUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_ALL_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8080/api/users/getallusers`, config);\n    dispatch({\n      type: USER_ALL_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_ALL_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = userid => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8080/api/users/deleteuser\", {\n      userid\n    });\n    swal(\"User Deleted Successfully!!!\", \"success\");\n    window.location.reload(); //href = \"/admin/userlist\";\n\n    console.log(res);\n  } catch (error) {\n    swal(\"Error While Deleting User\");\n  }\n};","map":{"version":3,"sources":["E:/sem 6/LAB WORK/SDP2/veggies/frontend/src/actions/userAction.js"],"names":["axios","swal","ORDER_LIST_MY_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_DETAILS_RESET","USER_ALL_DETAILS_FAIL","USER_ALL_DETAILS_REQUEST","USER_ALL_DETAILS_SUCCESS","logout","dispatch","localStorage","removeItem","type","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","getallUser","deleteUser","userid","res","window","location","reload","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_ALL_DETAILS_FAIL,\r\n  USER_ALL_DETAILS_REQUEST,\r\n  USER_ALL_DETAILS_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = { headers: { \"Contnet-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"http://localhost:8080/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const config = { headers: { \"Contnet-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"http://localhost:8080/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Contnet-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      `http://localhost:8080/api/users/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      \"http://localhost:8080/api/users/profile\",\r\n      user,\r\n      config\r\n    );\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getallUser = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_ALL_DETAILS_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Contnet-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      `http://localhost:8080/api/users/getallusers`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_ALL_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_ALL_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:8080/api/users/deleteuser\", {\r\n      userid,\r\n    });\r\n\r\n    swal(\"User Deleted Successfully!!!\", \"success\");\r\n    window.location.reload(); //href = \"/admin/userlist\";\r\n    console.log(res);\r\n  } catch (error) {\r\n    swal(\"Error While Deleting User\");\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}