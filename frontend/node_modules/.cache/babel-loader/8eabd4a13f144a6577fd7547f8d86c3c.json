{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/react-project/veggies/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","reducer","productList","productDetails","cart","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,QAAwD,2BAAxD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAAET,kBADe;AAE5BU,EAAAA,cAAc,EAAGT,qBAFW;AAG5BU,EAAAA,IAAI,EAAET;AAHsB,CAAD,CAA/B;AAKA,MAAMU,YAAY,GAAG;AACjBD,EAAAA,IAAI,EAAE;AACFE,IAAAA,SAAS,EAAEV;AADT;AADW,CAArB;AAKA,MAAMW,UAAU,GAAG,CAAChB,KAAD,CAAnB;AACA,MAAMiB,KAAK,GAAGpB,WAAW,CACrBa,OADqB,EAErBI,YAFqB,EAGrBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAHE,CAAzB;AAME,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {productListReducer ,productDetailsReducer} from \"./reducers/productReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    cart: cartReducer,\r\n});\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n    }\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  );\r\n\r\n  export default store;"]},"metadata":{},"sourceType":"module"}