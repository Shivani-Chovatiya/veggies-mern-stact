{"ast":null,"code":"var _jsxFileName = \"E:\\\\sem 6\\\\LAB WORK\\\\SDP2\\\\veggies\\\\frontend\\\\src\\\\screens\\\\ProductDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Product from '../products'; // import axios from 'axios'\n\nimport Rating from '../components/Rating';\nimport { Row, Col, ListGroup, Button, Image, ListGroupItem, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductDetails } from \"../actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Productdetails = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]); // const product = Product.find((p) => p._id === match.params.id);\n  // const [Products, setProducts] = useState([])\n  // useEffect(() => {\n  //     const fetchProducts = async () => {\n  //         const {data} = await axios.get(`/products/${match.params.id}`)\n  //         setProducts(data)\n  //     }\n  //     fetchProducts()\n  // },[])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          varient: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} Reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Price : \\u20B9\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: \"Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: qty,\n              onChange: e => setQty(e.target.value),\n              children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: x + 1,\n                children: x + 1\n              }, x + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-block\",\n            type: \"button\",\n            onClick: addToCartHandler,\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Productdetails, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Productdetails;\nexport default Productdetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"Productdetails\");","map":{"version":3,"sources":["E:/sem 6/LAB WORK/SDP2/veggies/frontend/src/screens/ProductDetails.jsx"],"names":["React","useState","useEffect","Product","Rating","Row","Col","ListGroup","Button","Image","ListGroupItem","Form","Link","useDispatch","useSelector","listProductDetails","Productdetails","history","match","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","addToCartHandler","push","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Product from '../products'\r\n// import axios from 'axios'\r\nimport Rating from '../components/Rating';\r\nimport {Row, Col, ListGroup, Button, Image, ListGroupItem, Form} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\n\r\nconst Productdetails = ({history, match}) => {\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id));\r\n      }, [dispatch, match]);\r\n    // const product = Product.find((p) => p._id === match.params.id);\r\n    // const [Products, setProducts] = useState([])\r\n    // useEffect(() => {\r\n    //     const fetchProducts = async () => {\r\n    //         const {data} = await axios.get(`/products/${match.params.id}`)\r\n    //         setProducts(data)\r\n    //     }\r\n    //     fetchProducts()\r\n    // },[])\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n      };\r\n  return (\r\n  <div>\r\n      <Link to=\"/\" className=\"btn btn-light\"> \r\n      <i class=\"fas fa-arrow-left\"></i>\r\n      </Link>\r\n      <Row>\r\n          <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid/>\r\n          \r\n          </Col>\r\n          <Col md={3}>\r\n              <ListGroup varient=\"flush\">\r\n                  <ListGroupItem>\r\n                      <h3>{product.name}</h3>\r\n                  </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <Rating value={product.rating} text={`${product.numReviews} Reviews`} />\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    Price : ₹{product.price}\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    {product.description}\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n              <ListGroupItem>\r\n                  <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                      {product.countInStock>0 ? 'In Stock' :'Out of Stock'}\r\n                      </Col>\r\n                  </Row>\r\n                  </ListGroupItem>\r\n                  {product.countInStock > 0 && (\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Col>Qty</Col>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={qty}\r\n                  onChange={(e) => setQty(e.target.value)}\r\n                >\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Row>\r\n            </ListGroupItem>\r\n          )}\r\n                  <ListGroupItem>\r\n                      <Button className=\"btn-block\" type=\"button\" onClick={addToCartHandler}>Add to cart</Button>\r\n                  </ListGroupItem>\r\n              {/* </ListGroupItem> */}\r\n          </Col>\r\n      </Row>\r\n\r\n\r\n  </div>\r\n  )\r\n};\r\n\r\nexport default Productdetails;"]},"metadata":{},"sourceType":"module"}