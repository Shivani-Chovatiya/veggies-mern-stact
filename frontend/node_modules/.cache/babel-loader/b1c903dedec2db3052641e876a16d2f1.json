{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILS, PRODUCT_ADD_FAILS, PRODUCT_ADD_REQUEST, PRODUCT_ADD_SUCCESS, GET_PRODUCTBYID_FAILS, GET_PRODUCTBYID_REQUEST, GET_PRODUCTBYID_SUCCESS, UPDATE_PRODUCTBYID_FAILS, UPDATE_PRODUCTBYID_REQUEST, UPDATE_PRODUCTBYID_SUCCESS } from \"../constants/productConstant\";\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:8080/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:8080/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addProducts = product => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_ADD_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://localhost:8080/api/addproducts\", {\n      product\n    });\n    dispatch({\n      type: PRODUCT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductById = productId => async dispatch => {\n  try {\n    dispatch({\n      type: GET_PRODUCTBYID_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://localhost:8080/api/getproductsbyid\", {\n      productId\n    });\n    dispatch({\n      type: GET_PRODUCTBYID_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_PRODUCTBYID_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = updatedProduct => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCTBYID_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://localhost:8080/api/updateproducts\", {\n      updatedProduct\n    });\n    dispatch({\n      type: UPDATE_PRODUCTBYID_SUCCESS,\n      payload: data\n    });\n    window.location.href = \"/admin/veggieslist\";\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCTBYID_FAILS,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = productId => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8080/api/deleteproducts\", {\n      productId\n    });\n    swal(\"Veg Deleted Successfully!!!\", \"success\");\n    window.location.href = \"/admin/veggieslist\";\n    console.log(res);\n  } catch (error) {\n    swal(\"Error While Deleting Veg\");\n  }\n};\nexport const searchProduct = searchkey => async dispatch => {\n  let searchedVeg;\n\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:8080/api/products\");\n    searchedVeg = res.data.filter(product => product.name.toLowerCase().includes(searchkey));\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: searchedVeg\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAILS,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["E:/sem 6/LAB WORK/SDP2/veggies/frontend/src/actions/productActions.js"],"names":["axios","swal","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILS","PRODUCT_ADD_FAILS","PRODUCT_ADD_REQUEST","PRODUCT_ADD_SUCCESS","GET_PRODUCTBYID_FAILS","GET_PRODUCTBYID_REQUEST","GET_PRODUCTBYID_SUCCESS","UPDATE_PRODUCTBYID_FAILS","UPDATE_PRODUCTBYID_REQUEST","UPDATE_PRODUCTBYID_SUCCESS","listProducts","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","addProducts","product","post","getProductById","productId","updateProduct","updatedProduct","window","location","href","deleteProduct","res","console","log","searchProduct","searchkey","searchedVeg","filter","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILS,\r\n  PRODUCT_ADD_FAILS,\r\n  PRODUCT_ADD_REQUEST,\r\n  PRODUCT_ADD_SUCCESS,\r\n  GET_PRODUCTBYID_FAILS,\r\n  GET_PRODUCTBYID_REQUEST,\r\n  GET_PRODUCTBYID_SUCCESS,\r\n  UPDATE_PRODUCTBYID_FAILS,\r\n  UPDATE_PRODUCTBYID_REQUEST,\r\n  UPDATE_PRODUCTBYID_SUCCESS,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\"http://localhost:8080/api/products\");\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAILS,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(\r\n      `http://localhost:8080/api/products/${id}`\r\n    );\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAILS,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addProducts = (product) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_ADD_REQUEST });\r\n    const { data } = await axios.post(\"http://localhost:8080/api/addproducts\", {\r\n      product,\r\n    });\r\n    dispatch({\r\n      type: PRODUCT_ADD_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_ADD_FAILS,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductById = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GET_PRODUCTBYID_REQUEST });\r\n    const { data } = await axios.post(\r\n      \"http://localhost:8080/api/getproductsbyid\",\r\n      {\r\n        productId,\r\n      }\r\n    );\r\n    dispatch({\r\n      type: GET_PRODUCTBYID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PRODUCTBYID_FAILS,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (updatedProduct) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCTBYID_REQUEST });\r\n    const { data } = await axios.post(\r\n      \"http://localhost:8080/api/updateproducts\",\r\n      {\r\n        updatedProduct,\r\n      }\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PRODUCTBYID_SUCCESS,\r\n      payload: data,\r\n    });\r\n    window.location.href = \"/admin/veggieslist\";\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCTBYID_FAILS,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:8080/api/deleteproducts\", {\r\n      productId,\r\n    });\r\n\r\n    swal(\"Veg Deleted Successfully!!!\", \"success\");\r\n    window.location.href = \"/admin/veggieslist\";\r\n    console.log(res);\r\n  } catch (error) {\r\n    swal(\"Error While Deleting Veg\");\r\n  }\r\n};\r\n\r\nexport const searchProduct = (searchkey) => async (dispatch) => {\r\n  let searchedVeg;\r\n\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\"http://localhost:8080/api/products\");\r\n    searchedVeg = res.data.filter((product) =>\r\n      product.name.toLowerCase().includes(searchkey)\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: searchedVeg });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAILS, payload: error });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}